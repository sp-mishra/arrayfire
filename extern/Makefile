# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.25

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /opt/homebrew/Cellar/cmake/3.25.2/bin/cmake

# The command to remove a file.
RM = /opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /Users/I501980/Documents/Code/Personal/arrayfire

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /Users/I501980/Documents/Code/Personal/arrayfire/extern

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Run CPack packaging tool..."
	/opt/homebrew/Cellar/cmake/3.25.2/bin/cpack --config ./CPackConfig.cmake
.PHONY : package

# Special rule for the target package
package/fast: package
.PHONY : package/fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Run CPack packaging tool for source..."
	/opt/homebrew/Cellar/cmake/3.25.2/bin/cpack --config ./CPackSourceConfig.cmake /Users/I501980/Documents/Code/Personal/arrayfire/extern/CPackSourceConfig.cmake
.PHONY : package_source

# Special rule for the target package_source
package_source/fast: package_source
.PHONY : package_source/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/opt/homebrew/Cellar/cmake/3.25.2/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\" \"arrayfire\" \"cmake\" \"common_backend_dependencies\" \"cpu\" \"examples\" \"headers\" \"licenses\" \"opencl\" \"unified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/opt/homebrew/Cellar/cmake/3.25.2/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/I501980/Documents/Code/Personal/arrayfire/extern/CMakeFiles /Users/I501980/Documents/Code/Personal/arrayfire/extern//CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/I501980/Documents/Code/Personal/arrayfire/extern/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named af_glad

# Build rule for target.
af_glad: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 af_glad
.PHONY : af_glad

# fast build rule for target.
af_glad/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/af_glad.dir/build.make CMakeFiles/af_glad.dir/build
.PHONY : af_glad/fast

#=============================================================================
# Target rules for targets named bin2cpp

# Build rule for target.
bin2cpp: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bin2cpp
.PHONY : bin2cpp

# fast build rule for target.
bin2cpp/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bin2cpp.dir/build.make CMakeFiles/bin2cpp.dir/build
.PHONY : bin2cpp/fast

#=============================================================================
# Target rules for targets named spdlog

# Build rule for target.
spdlog: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 spdlog
.PHONY : spdlog

# fast build rule for target.
spdlog/fast:
	$(MAKE) $(MAKESILENT) -f extern/spdlog-build/CMakeFiles/spdlog.dir/build.make extern/spdlog-build/CMakeFiles/spdlog.dir/build
.PHONY : spdlog/fast

#=============================================================================
# Target rules for targets named af_glad_obj_lib

# Build rule for target.
af_glad_obj_lib: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 af_glad_obj_lib
.PHONY : af_glad_obj_lib

# fast build rule for target.
af_glad_obj_lib/fast:
	$(MAKE) $(MAKESILENT) -f extern/af_glad-build/CMakeFiles/af_glad_obj_lib.dir/build.make extern/af_glad-build/CMakeFiles/af_glad_obj_lib.dir/build
.PHONY : af_glad_obj_lib/fast

#=============================================================================
# Target rules for targets named afcpu

# Build rule for target.
afcpu: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 afcpu
.PHONY : afcpu

# fast build rule for target.
afcpu/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/cpu/CMakeFiles/afcpu.dir/build.make src/backend/cpu/CMakeFiles/afcpu.dir/build
.PHONY : afcpu/fast

#=============================================================================
# Target rules for targets named cpu_sort_by_key_float

# Build rule for target.
cpu_sort_by_key_float: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpu_sort_by_key_float
.PHONY : cpu_sort_by_key_float

# fast build rule for target.
cpu_sort_by_key_float/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/cpu/CMakeFiles/cpu_sort_by_key_float.dir/build.make src/backend/cpu/CMakeFiles/cpu_sort_by_key_float.dir/build
.PHONY : cpu_sort_by_key_float/fast

#=============================================================================
# Target rules for targets named cpu_sort_by_key_double

# Build rule for target.
cpu_sort_by_key_double: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpu_sort_by_key_double
.PHONY : cpu_sort_by_key_double

# fast build rule for target.
cpu_sort_by_key_double/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/cpu/CMakeFiles/cpu_sort_by_key_double.dir/build.make src/backend/cpu/CMakeFiles/cpu_sort_by_key_double.dir/build
.PHONY : cpu_sort_by_key_double/fast

#=============================================================================
# Target rules for targets named cpu_sort_by_key_int

# Build rule for target.
cpu_sort_by_key_int: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpu_sort_by_key_int
.PHONY : cpu_sort_by_key_int

# fast build rule for target.
cpu_sort_by_key_int/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/cpu/CMakeFiles/cpu_sort_by_key_int.dir/build.make src/backend/cpu/CMakeFiles/cpu_sort_by_key_int.dir/build
.PHONY : cpu_sort_by_key_int/fast

#=============================================================================
# Target rules for targets named cpu_sort_by_key_uint

# Build rule for target.
cpu_sort_by_key_uint: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpu_sort_by_key_uint
.PHONY : cpu_sort_by_key_uint

# fast build rule for target.
cpu_sort_by_key_uint/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/cpu/CMakeFiles/cpu_sort_by_key_uint.dir/build.make src/backend/cpu/CMakeFiles/cpu_sort_by_key_uint.dir/build
.PHONY : cpu_sort_by_key_uint/fast

#=============================================================================
# Target rules for targets named cpu_sort_by_key_intl

# Build rule for target.
cpu_sort_by_key_intl: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpu_sort_by_key_intl
.PHONY : cpu_sort_by_key_intl

# fast build rule for target.
cpu_sort_by_key_intl/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/cpu/CMakeFiles/cpu_sort_by_key_intl.dir/build.make src/backend/cpu/CMakeFiles/cpu_sort_by_key_intl.dir/build
.PHONY : cpu_sort_by_key_intl/fast

#=============================================================================
# Target rules for targets named cpu_sort_by_key_uintl

# Build rule for target.
cpu_sort_by_key_uintl: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpu_sort_by_key_uintl
.PHONY : cpu_sort_by_key_uintl

# fast build rule for target.
cpu_sort_by_key_uintl/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/cpu/CMakeFiles/cpu_sort_by_key_uintl.dir/build.make src/backend/cpu/CMakeFiles/cpu_sort_by_key_uintl.dir/build
.PHONY : cpu_sort_by_key_uintl/fast

#=============================================================================
# Target rules for targets named cpu_sort_by_key_short

# Build rule for target.
cpu_sort_by_key_short: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpu_sort_by_key_short
.PHONY : cpu_sort_by_key_short

# fast build rule for target.
cpu_sort_by_key_short/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/cpu/CMakeFiles/cpu_sort_by_key_short.dir/build.make src/backend/cpu/CMakeFiles/cpu_sort_by_key_short.dir/build
.PHONY : cpu_sort_by_key_short/fast

#=============================================================================
# Target rules for targets named cpu_sort_by_key_ushort

# Build rule for target.
cpu_sort_by_key_ushort: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpu_sort_by_key_ushort
.PHONY : cpu_sort_by_key_ushort

# fast build rule for target.
cpu_sort_by_key_ushort/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/cpu/CMakeFiles/cpu_sort_by_key_ushort.dir/build.make src/backend/cpu/CMakeFiles/cpu_sort_by_key_ushort.dir/build
.PHONY : cpu_sort_by_key_ushort/fast

#=============================================================================
# Target rules for targets named cpu_sort_by_key_char

# Build rule for target.
cpu_sort_by_key_char: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpu_sort_by_key_char
.PHONY : cpu_sort_by_key_char

# fast build rule for target.
cpu_sort_by_key_char/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/cpu/CMakeFiles/cpu_sort_by_key_char.dir/build.make src/backend/cpu/CMakeFiles/cpu_sort_by_key_char.dir/build
.PHONY : cpu_sort_by_key_char/fast

#=============================================================================
# Target rules for targets named cpu_sort_by_key_uchar

# Build rule for target.
cpu_sort_by_key_uchar: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpu_sort_by_key_uchar
.PHONY : cpu_sort_by_key_uchar

# fast build rule for target.
cpu_sort_by_key_uchar/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/cpu/CMakeFiles/cpu_sort_by_key_uchar.dir/build.make src/backend/cpu/CMakeFiles/cpu_sort_by_key_uchar.dir/build
.PHONY : cpu_sort_by_key_uchar/fast

#=============================================================================
# Target rules for targets named CLBlast-ext

# Build rule for target.
CLBlast-ext: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 CLBlast-ext
.PHONY : CLBlast-ext

# fast build rule for target.
CLBlast-ext/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/CLBlast-ext.dir/build.make src/backend/opencl/CMakeFiles/CLBlast-ext.dir/build
.PHONY : CLBlast-ext/fast

#=============================================================================
# Target rules for targets named arrayfire_opencl_kernel_headers_bin_target

# Build rule for target.
arrayfire_opencl_kernel_headers_bin_target: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 arrayfire_opencl_kernel_headers_bin_target
.PHONY : arrayfire_opencl_kernel_headers_bin_target

# fast build rule for target.
arrayfire_opencl_kernel_headers_bin_target/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/arrayfire_opencl_kernel_headers_bin_target.dir/build.make src/backend/opencl/CMakeFiles/arrayfire_opencl_kernel_headers_bin_target.dir/build
.PHONY : arrayfire_opencl_kernel_headers_bin_target/fast

#=============================================================================
# Target rules for targets named opencl_scan_by_key_af_add_t

# Build rule for target.
opencl_scan_by_key_af_add_t: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_scan_by_key_af_add_t
.PHONY : opencl_scan_by_key_af_add_t

# fast build rule for target.
opencl_scan_by_key_af_add_t/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_scan_by_key_af_add_t.dir/build.make src/backend/opencl/CMakeFiles/opencl_scan_by_key_af_add_t.dir/build
.PHONY : opencl_scan_by_key_af_add_t/fast

#=============================================================================
# Target rules for targets named opencl_scan_by_key_af_mul_t

# Build rule for target.
opencl_scan_by_key_af_mul_t: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_scan_by_key_af_mul_t
.PHONY : opencl_scan_by_key_af_mul_t

# fast build rule for target.
opencl_scan_by_key_af_mul_t/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_scan_by_key_af_mul_t.dir/build.make src/backend/opencl/CMakeFiles/opencl_scan_by_key_af_mul_t.dir/build
.PHONY : opencl_scan_by_key_af_mul_t/fast

#=============================================================================
# Target rules for targets named opencl_scan_by_key_af_max_t

# Build rule for target.
opencl_scan_by_key_af_max_t: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_scan_by_key_af_max_t
.PHONY : opencl_scan_by_key_af_max_t

# fast build rule for target.
opencl_scan_by_key_af_max_t/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_scan_by_key_af_max_t.dir/build.make src/backend/opencl/CMakeFiles/opencl_scan_by_key_af_max_t.dir/build
.PHONY : opencl_scan_by_key_af_max_t/fast

#=============================================================================
# Target rules for targets named opencl_scan_by_key_af_min_t

# Build rule for target.
opencl_scan_by_key_af_min_t: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_scan_by_key_af_min_t
.PHONY : opencl_scan_by_key_af_min_t

# fast build rule for target.
opencl_scan_by_key_af_min_t/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_scan_by_key_af_min_t.dir/build.make src/backend/opencl/CMakeFiles/opencl_scan_by_key_af_min_t.dir/build
.PHONY : opencl_scan_by_key_af_min_t/fast

#=============================================================================
# Target rules for targets named opencl_sort_by_key_float

# Build rule for target.
opencl_sort_by_key_float: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_sort_by_key_float
.PHONY : opencl_sort_by_key_float

# fast build rule for target.
opencl_sort_by_key_float/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_sort_by_key_float.dir/build.make src/backend/opencl/CMakeFiles/opencl_sort_by_key_float.dir/build
.PHONY : opencl_sort_by_key_float/fast

#=============================================================================
# Target rules for targets named opencl_sort_by_key_double

# Build rule for target.
opencl_sort_by_key_double: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_sort_by_key_double
.PHONY : opencl_sort_by_key_double

# fast build rule for target.
opencl_sort_by_key_double/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_sort_by_key_double.dir/build.make src/backend/opencl/CMakeFiles/opencl_sort_by_key_double.dir/build
.PHONY : opencl_sort_by_key_double/fast

#=============================================================================
# Target rules for targets named opencl_sort_by_key_int

# Build rule for target.
opencl_sort_by_key_int: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_sort_by_key_int
.PHONY : opencl_sort_by_key_int

# fast build rule for target.
opencl_sort_by_key_int/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_sort_by_key_int.dir/build.make src/backend/opencl/CMakeFiles/opencl_sort_by_key_int.dir/build
.PHONY : opencl_sort_by_key_int/fast

#=============================================================================
# Target rules for targets named opencl_sort_by_key_uint

# Build rule for target.
opencl_sort_by_key_uint: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_sort_by_key_uint
.PHONY : opencl_sort_by_key_uint

# fast build rule for target.
opencl_sort_by_key_uint/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_sort_by_key_uint.dir/build.make src/backend/opencl/CMakeFiles/opencl_sort_by_key_uint.dir/build
.PHONY : opencl_sort_by_key_uint/fast

#=============================================================================
# Target rules for targets named opencl_sort_by_key_intl

# Build rule for target.
opencl_sort_by_key_intl: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_sort_by_key_intl
.PHONY : opencl_sort_by_key_intl

# fast build rule for target.
opencl_sort_by_key_intl/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_sort_by_key_intl.dir/build.make src/backend/opencl/CMakeFiles/opencl_sort_by_key_intl.dir/build
.PHONY : opencl_sort_by_key_intl/fast

#=============================================================================
# Target rules for targets named opencl_sort_by_key_uintl

# Build rule for target.
opencl_sort_by_key_uintl: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_sort_by_key_uintl
.PHONY : opencl_sort_by_key_uintl

# fast build rule for target.
opencl_sort_by_key_uintl/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_sort_by_key_uintl.dir/build.make src/backend/opencl/CMakeFiles/opencl_sort_by_key_uintl.dir/build
.PHONY : opencl_sort_by_key_uintl/fast

#=============================================================================
# Target rules for targets named opencl_sort_by_key_short

# Build rule for target.
opencl_sort_by_key_short: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_sort_by_key_short
.PHONY : opencl_sort_by_key_short

# fast build rule for target.
opencl_sort_by_key_short/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_sort_by_key_short.dir/build.make src/backend/opencl/CMakeFiles/opencl_sort_by_key_short.dir/build
.PHONY : opencl_sort_by_key_short/fast

#=============================================================================
# Target rules for targets named opencl_sort_by_key_ushort

# Build rule for target.
opencl_sort_by_key_ushort: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_sort_by_key_ushort
.PHONY : opencl_sort_by_key_ushort

# fast build rule for target.
opencl_sort_by_key_ushort/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_sort_by_key_ushort.dir/build.make src/backend/opencl/CMakeFiles/opencl_sort_by_key_ushort.dir/build
.PHONY : opencl_sort_by_key_ushort/fast

#=============================================================================
# Target rules for targets named opencl_sort_by_key_char

# Build rule for target.
opencl_sort_by_key_char: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_sort_by_key_char
.PHONY : opencl_sort_by_key_char

# fast build rule for target.
opencl_sort_by_key_char/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_sort_by_key_char.dir/build.make src/backend/opencl/CMakeFiles/opencl_sort_by_key_char.dir/build
.PHONY : opencl_sort_by_key_char/fast

#=============================================================================
# Target rules for targets named opencl_sort_by_key_uchar

# Build rule for target.
opencl_sort_by_key_uchar: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_sort_by_key_uchar
.PHONY : opencl_sort_by_key_uchar

# fast build rule for target.
opencl_sort_by_key_uchar/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_sort_by_key_uchar.dir/build.make src/backend/opencl/CMakeFiles/opencl_sort_by_key_uchar.dir/build
.PHONY : opencl_sort_by_key_uchar/fast

#=============================================================================
# Target rules for targets named opencl_sort_by_key_half

# Build rule for target.
opencl_sort_by_key_half: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 opencl_sort_by_key_half
.PHONY : opencl_sort_by_key_half

# fast build rule for target.
opencl_sort_by_key_half/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/opencl_sort_by_key_half.dir/build.make src/backend/opencl/CMakeFiles/opencl_sort_by_key_half.dir/build
.PHONY : opencl_sort_by_key_half/fast

#=============================================================================
# Target rules for targets named afopencl

# Build rule for target.
afopencl: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 afopencl
.PHONY : afopencl

# fast build rule for target.
afopencl/fast:
	$(MAKE) $(MAKESILENT) -f src/backend/opencl/CMakeFiles/afopencl.dir/build.make src/backend/opencl/CMakeFiles/afopencl.dir/build
.PHONY : afopencl/fast

#=============================================================================
# Target rules for targets named clFFT

# Build rule for target.
clFFT: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clFFT
.PHONY : clFFT

# fast build rule for target.
clFFT/fast:
	$(MAKE) $(MAKESILENT) -f extern/ocl_clfft-build/library/CMakeFiles/clFFT.dir/build.make extern/ocl_clfft-build/library/CMakeFiles/clFFT.dir/build
.PHONY : clFFT/fast

#=============================================================================
# Target rules for targets named StatTimer

# Build rule for target.
StatTimer: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 StatTimer
.PHONY : StatTimer

# fast build rule for target.
StatTimer/fast:
	$(MAKE) $(MAKESILENT) -f extern/ocl_clfft-build/statTimer/CMakeFiles/StatTimer.dir/build.make extern/ocl_clfft-build/statTimer/CMakeFiles/StatTimer.dir/build
.PHONY : StatTimer/fast

#=============================================================================
# Target rules for targets named af

# Build rule for target.
af: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 af
.PHONY : af

# fast build rule for target.
af/fast:
	$(MAKE) $(MAKESILENT) -f src/api/unified/CMakeFiles/af.dir/build.make src/api/unified/CMakeFiles/af.dir/build
.PHONY : af/fast

CMakeModules/bin2cpp.o: CMakeModules/bin2cpp.cpp.o
.PHONY : CMakeModules/bin2cpp.o

# target to build an object file
CMakeModules/bin2cpp.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bin2cpp.dir/build.make CMakeFiles/bin2cpp.dir/CMakeModules/bin2cpp.cpp.o
.PHONY : CMakeModules/bin2cpp.cpp.o

CMakeModules/bin2cpp.i: CMakeModules/bin2cpp.cpp.i
.PHONY : CMakeModules/bin2cpp.i

# target to preprocess a source file
CMakeModules/bin2cpp.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bin2cpp.dir/build.make CMakeFiles/bin2cpp.dir/CMakeModules/bin2cpp.cpp.i
.PHONY : CMakeModules/bin2cpp.cpp.i

CMakeModules/bin2cpp.s: CMakeModules/bin2cpp.cpp.s
.PHONY : CMakeModules/bin2cpp.s

# target to generate assembly for a file
CMakeModules/bin2cpp.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bin2cpp.dir/build.make CMakeFiles/bin2cpp.dir/CMakeModules/bin2cpp.cpp.s
.PHONY : CMakeModules/bin2cpp.cpp.s

src/backend/common/deterministicHash.o: src/backend/common/deterministicHash.cpp.o
.PHONY : src/backend/common/deterministicHash.o

# target to build an object file
src/backend/common/deterministicHash.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bin2cpp.dir/build.make CMakeFiles/bin2cpp.dir/src/backend/common/deterministicHash.cpp.o
.PHONY : src/backend/common/deterministicHash.cpp.o

src/backend/common/deterministicHash.i: src/backend/common/deterministicHash.cpp.i
.PHONY : src/backend/common/deterministicHash.i

# target to preprocess a source file
src/backend/common/deterministicHash.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bin2cpp.dir/build.make CMakeFiles/bin2cpp.dir/src/backend/common/deterministicHash.cpp.i
.PHONY : src/backend/common/deterministicHash.cpp.i

src/backend/common/deterministicHash.s: src/backend/common/deterministicHash.cpp.s
.PHONY : src/backend/common/deterministicHash.s

# target to generate assembly for a file
src/backend/common/deterministicHash.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bin2cpp.dir/build.make CMakeFiles/bin2cpp.dir/src/backend/common/deterministicHash.cpp.s
.PHONY : src/backend/common/deterministicHash.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... package"
	@echo "... package_source"
	@echo "... rebuild_cache"
	@echo "... CLBlast-ext"
	@echo "... arrayfire_opencl_kernel_headers_bin_target"
	@echo "... StatTimer"
	@echo "... af"
	@echo "... af_glad"
	@echo "... af_glad_obj_lib"
	@echo "... afcpu"
	@echo "... afopencl"
	@echo "... bin2cpp"
	@echo "... clFFT"
	@echo "... cpu_sort_by_key_char"
	@echo "... cpu_sort_by_key_double"
	@echo "... cpu_sort_by_key_float"
	@echo "... cpu_sort_by_key_int"
	@echo "... cpu_sort_by_key_intl"
	@echo "... cpu_sort_by_key_short"
	@echo "... cpu_sort_by_key_uchar"
	@echo "... cpu_sort_by_key_uint"
	@echo "... cpu_sort_by_key_uintl"
	@echo "... cpu_sort_by_key_ushort"
	@echo "... opencl_scan_by_key_af_add_t"
	@echo "... opencl_scan_by_key_af_max_t"
	@echo "... opencl_scan_by_key_af_min_t"
	@echo "... opencl_scan_by_key_af_mul_t"
	@echo "... opencl_sort_by_key_char"
	@echo "... opencl_sort_by_key_double"
	@echo "... opencl_sort_by_key_float"
	@echo "... opencl_sort_by_key_half"
	@echo "... opencl_sort_by_key_int"
	@echo "... opencl_sort_by_key_intl"
	@echo "... opencl_sort_by_key_short"
	@echo "... opencl_sort_by_key_uchar"
	@echo "... opencl_sort_by_key_uint"
	@echo "... opencl_sort_by_key_uintl"
	@echo "... opencl_sort_by_key_ushort"
	@echo "... spdlog"
	@echo "... CMakeModules/bin2cpp.o"
	@echo "... CMakeModules/bin2cpp.i"
	@echo "... CMakeModules/bin2cpp.s"
	@echo "... src/backend/common/deterministicHash.o"
	@echo "... src/backend/common/deterministicHash.i"
	@echo "... src/backend/common/deterministicHash.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

